// <auto-generated />
using System;
using DataAccess.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataAccess.Migrations
{
    [DbContext(typeof(JobContext))]
    [Migration("20190716094500_DataAccess.EntityFramework.JobContext")]
    partial class DataAccessEntityFrameworkJobContext
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("Argon")
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DataAccess.EntityFramework.Models.Action", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Actions");
                });

            modelBuilder.Entity("DataAccess.EntityFramework.Models.ActionState", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ActionDateTime");

                    b.Property<int>("ActionId");

                    b.Property<int>("EIN");

                    b.Property<int>("JobId");

                    b.Property<string>("Notes");

                    b.Property<int>("StatusId");

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.HasIndex("ActionId");

                    b.HasIndex("JobId");

                    b.HasIndex("StatusId");

                    b.ToTable("ActionStates");
                });

            modelBuilder.Entity("DataAccess.EntityFramework.Models.JobDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<DateTime>("EffectiveStartDate");

                    b.Property<string>("Identifier");

                    b.Property<string>("Name");

                    b.Property<int>("Type");

                    b.HasKey("Id");

                    b.HasIndex("Type");

                    b.ToTable("JobDetails");
                });

            modelBuilder.Entity("DataAccess.EntityFramework.Models.JobType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("JobTypes");
                });

            modelBuilder.Entity("DataAccess.EntityFramework.Models.Status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Statuses");
                });

            modelBuilder.Entity("DataAccess.EntityFramework.Models.ActionState", b =>
                {
                    b.HasOne("DataAccess.EntityFramework.Models.Action", "Action")
                        .WithMany("ActionState")
                        .HasForeignKey("ActionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DataAccess.EntityFramework.Models.JobDetail", "JobDetail")
                        .WithMany("ActionStates")
                        .HasForeignKey("JobId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DataAccess.EntityFramework.Models.Status", "Status")
                        .WithMany("ActionState")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DataAccess.EntityFramework.Models.JobDetail", b =>
                {
                    b.HasOne("DataAccess.EntityFramework.Models.JobType", "JobType")
                        .WithMany("JobDetails")
                        .HasForeignKey("Type")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
